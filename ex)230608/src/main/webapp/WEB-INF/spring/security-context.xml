<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<security:http pattern="/css/**" security="none"/>
	<!-- 기본적으로 들어오는 정보에 대한 인증을 받을껀지. security="none" 적용하지 않겠다는 말. 정적인 파일은 시큐리티 적용 안하는 경우 많음.
	해당 경로가 가지는 패턴을 기반으로 해서 등록해주면 됨.  -->
 	<security:http>
 	<!-- 패턴을 기반으로 해서 순서대로 들어감. 무작위로 하는거 아님. 순서 중요하다.
 	필터를 통해 걸러낸다. 개별 분리할 수 있는거 다 분리시키고 디폴트 어떻게 들어가야 한다. 이게 안되면 적용이 안됨. -->
 	<!-- acess -> permitAll() -> 모든 사람 인증. -->
 	<!-- acess ->hasAuthority-> ROLE_ADMIN -> 인증은 되었고 이(ROLE_ADMIN)) 권한이 있느냐  -->
 	<!-- acess -> isAuthenticated() -> 인증만 됐다면 인가.  -->
		<security:intercept-url pattern="/top.jsp" access="permitAll()"/>
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/**" access="isAuthenticated()"/>
		<security:form-login default-target-url="/top.jsp"/>
		<security:logout logout-url="/logout" logout-success-url="/top.jsp"/>
		<!-- <security:csrf disabled="true"/> -->
	</security:http>
	
	<bean id="userDetailService" class="com.yedam.app.user.service.CustomerUserDetailsService"/>
	<!-- 밑에있는애가 위에 있는 애 참고할꺼니까 빈등록이 위에 있어야 함. -->
			<security:authentication-manager>
				<security:authentication-provider user-service-ref="userDetailService">
				<!-- 마이바티스랑 연결된 거 아니고 히카리CP랑 연결되어 있다. -->
				<!-- <security:jdbc-user-service data-source-ref="dataSource" 
					users-by-username-query="SELECT login_id, '{noop}'||password, 1 
											 FROM t_user
											 WHERE login_id = ?"
											 
				   authorities-by-username-query="SELECT login_id, role_name
				   								 FROM t_user JOIN t_user_role
				   								   ON t_user.id = t_user_role.user_id
				   								   			  JOIN t_role
	   								   			   ON t_user_role.role_id = t_role.id
	   								   			WHERE login_id = ?"
				/> -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
